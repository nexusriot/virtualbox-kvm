From 0000000000000000000000000000000000000000 Mon Sep 17 00:00:00 2001
From: Thomas Prescher <thomas.prescher@cyberus-technology.de>
Date: Thu, 23 May 2024 10:15:17 +0200
Subject: [PATCH] NEM/KVM: only update GPRs when their value has changed

---
 src/VBox/VMM/VMMR3/NEMR3Native-linux.cpp | 87 ++++++++++++++----------
 1 file changed, 51 insertions(+), 36 deletions(-)

diff --git a/src/VBox/VMM/VMMR3/NEMR3Native-linux.cpp b/src/VBox/VMM/VMMR3/NEMR3Native-linux.cpp
index 4ef8e93ad2..42c44765e0 100644
--- a/src/VBox/VMM/VMMR3/NEMR3Native-linux.cpp
+++ b/src/VBox/VMM/VMMR3/NEMR3Native-linux.cpp
@@ -2465,6 +2465,13 @@ VMM_INT_DECL(int) NEMImportStateOnDemand(PVMCPUCC pVCpu, uint64_t fWhat)
  */
 static int nemHCLnxExportState(PVM pVM, PVMCPU pVCpu, PCPUMCTX pCtx, struct kvm_run *pRun)
 {
+#define NEM_UPDATE_IF_CHANGED(dst, src, dirty_flag) \
+        if (src != dst) { \
+            dst = src; \
+            dirty_flag = true; \
+        }
+
+
     uint64_t const fExtrn = ~pCtx->fExtrn & CPUMCTX_EXTRN_ALL;
     Assert((~fExtrn & CPUMCTX_EXTRN_ALL) != CPUMCTX_EXTRN_ALL);
 
@@ -2473,39 +2480,53 @@ static int nemHCLnxExportState(PVM pVM, PVMCPU pVCpu, PCPUMCTX pCtx, struct kvm_
      */
     if (fExtrn & (CPUMCTX_EXTRN_RIP | CPUMCTX_EXTRN_RFLAGS | CPUMCTX_EXTRN_GPRS_MASK))
     {
-        if (fExtrn & CPUMCTX_EXTRN_RIP)
-            pRun->s.regs.regs.rip    = pCtx->rip;
-        if (fExtrn & CPUMCTX_EXTRN_RFLAGS)
-            pRun->s.regs.regs.rflags = pCtx->rflags.u;
-
-        if (fExtrn & CPUMCTX_EXTRN_RAX)
-            pRun->s.regs.regs.rax    = pCtx->rax;
-        if (fExtrn & CPUMCTX_EXTRN_RCX)
-            pRun->s.regs.regs.rcx    = pCtx->rcx;
-        if (fExtrn & CPUMCTX_EXTRN_RDX)
-            pRun->s.regs.regs.rdx    = pCtx->rdx;
-        if (fExtrn & CPUMCTX_EXTRN_RBX)
-            pRun->s.regs.regs.rbx    = pCtx->rbx;
-        if (fExtrn & CPUMCTX_EXTRN_RSP)
-            pRun->s.regs.regs.rsp    = pCtx->rsp;
-        if (fExtrn & CPUMCTX_EXTRN_RBP)
-            pRun->s.regs.regs.rbp    = pCtx->rbp;
-        if (fExtrn & CPUMCTX_EXTRN_RSI)
-            pRun->s.regs.regs.rsi    = pCtx->rsi;
-        if (fExtrn & CPUMCTX_EXTRN_RDI)
-            pRun->s.regs.regs.rdi    = pCtx->rdi;
+        bool dirty_gprs {false};
+
+        if (fExtrn & CPUMCTX_EXTRN_RIP) {
+            NEM_UPDATE_IF_CHANGED(pRun->s.regs.regs.rip, pCtx->rip, dirty_gprs);
+        }
+        if (fExtrn & CPUMCTX_EXTRN_RFLAGS) {
+            NEM_UPDATE_IF_CHANGED(pRun->s.regs.regs.rflags, pCtx->rflags.u, dirty_gprs);
+        }
+
+        if (fExtrn & CPUMCTX_EXTRN_RAX) {
+            NEM_UPDATE_IF_CHANGED(pRun->s.regs.regs.rax, pCtx->rax, dirty_gprs);
+        }
+        if (fExtrn & CPUMCTX_EXTRN_RCX) {
+            NEM_UPDATE_IF_CHANGED(pRun->s.regs.regs.rcx, pCtx->rcx, dirty_gprs);
+        }
+        if (fExtrn & CPUMCTX_EXTRN_RDX) {
+            NEM_UPDATE_IF_CHANGED(pRun->s.regs.regs.rdx, pCtx->rdx, dirty_gprs);
+        }
+        if (fExtrn & CPUMCTX_EXTRN_RBX) {
+            NEM_UPDATE_IF_CHANGED(pRun->s.regs.regs.rbx, pCtx->rbx, dirty_gprs);
+        }
+        if (fExtrn & CPUMCTX_EXTRN_RSP) {
+            NEM_UPDATE_IF_CHANGED(pRun->s.regs.regs.rsp, pCtx->rsp, dirty_gprs);
+        }
+        if (fExtrn & CPUMCTX_EXTRN_RBP) {
+            NEM_UPDATE_IF_CHANGED(pRun->s.regs.regs.rbp, pCtx->rbp, dirty_gprs);
+        }
+        if (fExtrn & CPUMCTX_EXTRN_RSI) {
+            NEM_UPDATE_IF_CHANGED(pRun->s.regs.regs.rsi, pCtx->rsi, dirty_gprs);
+        }
+        if (fExtrn & CPUMCTX_EXTRN_RDI) {
+            NEM_UPDATE_IF_CHANGED(pRun->s.regs.regs.rdi, pCtx->rdi, dirty_gprs);
+        }
         if (fExtrn & CPUMCTX_EXTRN_R8_R15)
         {
-            pRun->s.regs.regs.r8     = pCtx->r8;
-            pRun->s.regs.regs.r9     = pCtx->r9;
-            pRun->s.regs.regs.r10    = pCtx->r10;
-            pRun->s.regs.regs.r11    = pCtx->r11;
-            pRun->s.regs.regs.r12    = pCtx->r12;
-            pRun->s.regs.regs.r13    = pCtx->r13;
-            pRun->s.regs.regs.r14    = pCtx->r14;
-            pRun->s.regs.regs.r15    = pCtx->r15;
+            NEM_UPDATE_IF_CHANGED(pRun->s.regs.regs.r8, pCtx->r8, dirty_gprs);
+            NEM_UPDATE_IF_CHANGED(pRun->s.regs.regs.r9, pCtx->r9, dirty_gprs);
+            NEM_UPDATE_IF_CHANGED(pRun->s.regs.regs.r10, pCtx->r10, dirty_gprs);
+            NEM_UPDATE_IF_CHANGED(pRun->s.regs.regs.r11, pCtx->r11, dirty_gprs);
+            NEM_UPDATE_IF_CHANGED(pRun->s.regs.regs.r12, pCtx->r12, dirty_gprs);
+            NEM_UPDATE_IF_CHANGED(pRun->s.regs.regs.r13, pCtx->r13, dirty_gprs);
+            NEM_UPDATE_IF_CHANGED(pRun->s.regs.regs.r14, pCtx->r14, dirty_gprs);
+            NEM_UPDATE_IF_CHANGED(pRun->s.regs.regs.r15, pCtx->r15, dirty_gprs);
+        }
+        if (dirty_gprs) {
+            pRun->kvm_dirty_regs |= KVM_SYNC_X86_REGS;
         }
-        pRun->kvm_dirty_regs |= KVM_SYNC_X86_REGS;
     }
 
     /*
@@ -2549,12 +2570,6 @@ static int nemHCLnxExportState(PVM pVM, PVMCPU pVCpu, PCPUMCTX pCtx, struct kvm_
             (a_KvmSeg).g        == (a_CtxSeg).Attr.n.u1Granularity && \
             (a_KvmSeg).unusable == (a_CtxSeg).Attr.n.u1Unusable \
         )
-#define NEM_UPDATE_IF_CHANGED(dst, src, dirty_flag) \
-        if (src != dst) { \
-            dst = src; \
-            dirty_flag = true; \
-        }
-
         bool dirty_sregs = false;
 
         if ((pVCpu->nem.s.uKvmApicBase ^ uApicBase) & MSR_IA32_APICBASE_EN)
-- 
2.43.0

